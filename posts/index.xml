<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://haim-ari.github.io/posts/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 21 May 2018 00:23:42 +0300</lastBuildDate>
    
	<atom:link href="https://haim-ari.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automatically Launch AWS Instances With Dyn</title>
      <link>https://haim-ari.github.io/posts/automatically-launch-aws-instances-with-dyn/</link>
      <pubDate>Mon, 21 May 2018 00:23:42 +0300</pubDate>
      
      <guid>https://haim-ari.github.io/posts/automatically-launch-aws-instances-with-dyn/</guid>
      <description>Dyn can provide a very simple solution for fail over. When you have a network outage in your primary Data Center you want to fail over as soon as possible. I use Dyn DNS “FailOver” feature to determine if a service is completely down on a site. you can use a simple http check and parse the response. Then the script launches X number of instances in AWS as soon as it detects the “Error” status.</description>
    </item>
    
    <item>
      <title>Multi Haproxy</title>
      <link>https://haim-ari.github.io/posts/multi-haproxy/</link>
      <pubDate>Mon, 21 May 2018 00:12:25 +0300</pubDate>
      
      <guid>https://haim-ari.github.io/posts/multi-haproxy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Syntax highlighting test page</title>
      <link>https://haim-ari.github.io/posts/syntax_highlighting/</link>
      <pubDate>Fri, 18 May 2018 23:25:18 +0300</pubDate>
      
      <guid>https://haim-ari.github.io/posts/syntax_highlighting/</guid>
      <description>This is a test page i made in order to see if all syntax highlighting works ok:
 HTML Bash Json YAML Python   For YAML to work, i added the following to the configured template, in my case:
 hyde-hyde/layouts/partials/commenting.html  (HTML)
&amp;lt;script src=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/languages/yaml.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; hljs.configure({languages: []}); hljs.initHighlightingOnLoad(); &amp;lt;/script&amp;gt;  (BASH)
#!/bin/bash ###### CONFIG ACCEPTED_HOSTS=&amp;quot;/root/.hag_accepted.conf&amp;quot; BE_VERBOSE=false if [ &amp;quot;$UID&amp;quot; -ne 0 ] then echo &amp;quot;Superuser rights required&amp;quot; exit 2 fi genApacheConf(){ echo -e &amp;quot;# Host ${HOME_DIR}$1/$2 :&amp;quot; }  (JSON)</description>
    </item>
    
    <item>
      <title>ecs ci-cd with gitlab</title>
      <link>https://haim-ari.github.io/posts/ecs-ci-cd-with-gitlab/</link>
      <pubDate>Sun, 01 Oct 2017 21:40:29 +0300</pubDate>
      
      <guid>https://haim-ari.github.io/posts/ecs-ci-cd-with-gitlab/</guid>
      <description>Here is a short guide on how to easily manage your CI/CD on ECS using Gitlab Pipeline &amp;amp; ecs-deploy
a few weeks ago we needed to adopt a new product into the company, this product required building from scratch since it was relatively old and based on old technologies. So first i created an ECS-cluster
I’ll focus on the CI/CD process, this means you already have: 1. ECS cluster running 2.</description>
    </item>
    
  </channel>
</rss>